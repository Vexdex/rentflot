<?php

/**
 * BaseOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property boolean $is_archived
 * @property integer $client_id
 * @property integer $pier_id
 * @property integer $spd_id
 * @property integer $order_type_id
 * @property integer $order_owner_id
 * @property timestamp $date
 * @property time $time_from
 * @property time $time_to
 * @property string $people_count
 * @property string $additional_information
 * @property clob $client_information
 * @property Doctrine_Collection $Items
 * @property OrderType $OrderType
 * @property Client $Client
 * @property Spd $Spd
 * @property OrderOwner $OrderOwner
 * @property Pier $Pier
 * @property Doctrine_Collection $ClientContact
 * @property Doctrine_Collection $OrderItems
 * 
 * @method boolean             getIsArchived()             Returns the current record's "is_archived" value
 * @method integer             getClientId()               Returns the current record's "client_id" value
 * @method integer             getPierId()                 Returns the current record's "pier_id" value
 * @method integer             getSpdId()                  Returns the current record's "spd_id" value
 * @method integer             getOrderTypeId()            Returns the current record's "order_type_id" value
 * @method integer             getOrderOwnerId()           Returns the current record's "order_owner_id" value
 * @method timestamp           getDate()                   Returns the current record's "date" value
 * @method time                getTimeFrom()               Returns the current record's "time_from" value
 * @method time                getTimeTo()                 Returns the current record's "time_to" value
 * @method string              getPeopleCount()            Returns the current record's "people_count" value
 * @method string              getAdditionalInformation()  Returns the current record's "additional_information" value
 * @method clob                getClientInformation()      Returns the current record's "client_information" value
 * @method Doctrine_Collection getItems()                  Returns the current record's "Items" collection
 * @method OrderType           getOrderType()              Returns the current record's "OrderType" value
 * @method Client              getClient()                 Returns the current record's "Client" value
 * @method Spd                 getSpd()                    Returns the current record's "Spd" value
 * @method OrderOwner          getOrderOwner()             Returns the current record's "OrderOwner" value
 * @method Pier                getPier()                   Returns the current record's "Pier" value
 * @method Doctrine_Collection getClientContact()          Returns the current record's "ClientContact" collection
 * @method Doctrine_Collection getOrderItems()             Returns the current record's "OrderItems" collection
 * @method Order               setIsArchived()             Sets the current record's "is_archived" value
 * @method Order               setClientId()               Sets the current record's "client_id" value
 * @method Order               setPierId()                 Sets the current record's "pier_id" value
 * @method Order               setSpdId()                  Sets the current record's "spd_id" value
 * @method Order               setOrderTypeId()            Sets the current record's "order_type_id" value
 * @method Order               setOrderOwnerId()           Sets the current record's "order_owner_id" value
 * @method Order               setDate()                   Sets the current record's "date" value
 * @method Order               setTimeFrom()               Sets the current record's "time_from" value
 * @method Order               setTimeTo()                 Sets the current record's "time_to" value
 * @method Order               setPeopleCount()            Sets the current record's "people_count" value
 * @method Order               setAdditionalInformation()  Sets the current record's "additional_information" value
 * @method Order               setClientInformation()      Sets the current record's "client_information" value
 * @method Order               setItems()                  Sets the current record's "Items" collection
 * @method Order               setOrderType()              Sets the current record's "OrderType" value
 * @method Order               setClient()                 Sets the current record's "Client" value
 * @method Order               setSpd()                    Sets the current record's "Spd" value
 * @method Order               setOrderOwner()             Sets the current record's "OrderOwner" value
 * @method Order               setPier()                   Sets the current record's "Pier" value
 * @method Order               setClientContact()          Sets the current record's "ClientContact" collection
 * @method Order               setOrderItems()             Sets the current record's "OrderItems" collection
 * 
 * @package    Rentflot
 * @subpackage model
 * @author     Infosoft
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('order');
        $this->hasColumn('is_archived', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('client_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('pier_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('spd_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('order_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('order_owner_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('time_from', 'time', null, array(
             'type' => 'time',
             'notnull' => true,
             ));
        $this->hasColumn('time_to', 'time', null, array(
             'type' => 'time',
             'notnull' => true,
             ));
        $this->hasColumn('people_count', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('additional_information', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('client_information', 'clob', null, array(
             'type' => 'clob',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Item as Items', array(
             'refClass' => 'OrderItem',
             'local' => 'order_id',
             'foreign' => 'item_id'));

        $this->hasOne('OrderType', array(
             'local' => 'order_type_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Client', array(
             'local' => 'client_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Spd', array(
             'local' => 'spd_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('OrderOwner', array(
             'local' => 'order_owner_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Pier', array(
             'local' => 'pier_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('ClientContact', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('OrderItem as OrderItems', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($signable0);
    }
}