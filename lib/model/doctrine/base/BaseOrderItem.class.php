<?php

/**
 * BaseOrderItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $order_id
 * @property integer $item_id
 * @property integer $status_id
 * @property double $count
 * @property double $price_uah
 * @property double $amount_payed_uah
 * @property double $amount_payed_bank_uah
 * @property double $amount_costs_uah
 * @property double $amount_costs_payed_uah
 * @property Order $Order
 * @property Item $Item
 * @property OrderItemStatus $Status
 * 
 * @method integer         getOrderId()                Returns the current record's "order_id" value
 * @method integer         getItemId()                 Returns the current record's "item_id" value
 * @method integer         getStatusId()               Returns the current record's "status_id" value
 * @method double          getCount()                  Returns the current record's "count" value
 * @method double          getPriceUah()               Returns the current record's "price_uah" value
 * @method double          getAmountPayedUah()         Returns the current record's "amount_payed_uah" value
 * @method double          getAmountPayedBankUah()     Returns the current record's "amount_payed_bank_uah" value
 * @method double          getAmountCostsUah()         Returns the current record's "amount_costs_uah" value
 * @method double          getAmountCostsPayedUah()    Returns the current record's "amount_costs_payed_uah" value
 * @method Order           getOrder()                  Returns the current record's "Order" value
 * @method Item            getItem()                   Returns the current record's "Item" value
 * @method OrderItemStatus getStatus()                 Returns the current record's "Status" value
 * @method OrderItem       setOrderId()                Sets the current record's "order_id" value
 * @method OrderItem       setItemId()                 Sets the current record's "item_id" value
 * @method OrderItem       setStatusId()               Sets the current record's "status_id" value
 * @method OrderItem       setCount()                  Sets the current record's "count" value
 * @method OrderItem       setPriceUah()               Sets the current record's "price_uah" value
 * @method OrderItem       setAmountPayedUah()         Sets the current record's "amount_payed_uah" value
 * @method OrderItem       setAmountPayedBankUah()     Sets the current record's "amount_payed_bank_uah" value
 * @method OrderItem       setAmountCostsUah()         Sets the current record's "amount_costs_uah" value
 * @method OrderItem       setAmountCostsPayedUah()    Sets the current record's "amount_costs_payed_uah" value
 * @method OrderItem       setOrder()                  Sets the current record's "Order" value
 * @method OrderItem       setItem()                   Sets the current record's "Item" value
 * @method OrderItem       setStatus()                 Sets the current record's "Status" value
 * 
 * @package    Rentflot
 * @subpackage model
 * @author     Infosoft
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrderItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('order_item');
        $this->hasColumn('order_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('count', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('price_uah', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('amount_payed_uah', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('amount_payed_bank_uah', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('amount_costs_uah', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('amount_costs_payed_uah', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Order', array(
             'local' => 'order_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Item', array(
             'local' => 'item_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('OrderItemStatus as Status', array(
             'local' => 'status_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}